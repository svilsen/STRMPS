% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/STR_Region_Identification.R
\name{identifySTRRegions,list-method}
\alias{identifySTRRegions,list-method}
\title{Identify the STR regions of from bam-input.}
\usage{
\S4method{identifySTRRegions}{list}(
  reads,
  flankingRegions,
  numberOfMutation = 1,
  control = identifySTRRegions.control()
)
}
\arguments{
\item{reads}{list of bam input.}

\item{flankingRegions}{containing marker ID/name, the directly adjacent forward and reverse flanking regions, used for identification.}

\item{numberOfMutation}{the maximum number of mutations (base-calling errors) allowed during flanking region identification.}

\item{control}{an \link{identifySTRRegions.control}-object.}
}
\value{
The returned object is a list of lists. If the reverse complement strings are not included or if the \code{control$combineLists == TRUE},
a list, contains lists of untrimmed and trimmed strings for each row in \code{flankingRegions}. If \code{control$combineLists == FALSE}, the function returns a list of two such lists,
one for forward strings and one for the reverse complement strings.
}
\description{
\code{identifySTRRegions} takes a list create using the \link{scanBam} function,
and identifies the STR regions based on a directly adjacent flanking regions.
The function allows for mutation in the flanking regions through the \code{numberOfMutation} argument.
}
\examples{
\donttest{
    library("Biostrings")
    library("ShortRead")
    library("Rsamtools")

    # Path to file
    bamReadPath <- system.file('extdata', "sampleSequences.bam", package = 'STRMPS')
    baiReadPath <- system.file('extdata', "sampleSequences.bam.bai", package = 'STRMPS')

    # Flanking regions
    data("flankingRegions")

    # Read the file into memory
    readFile <- scanBam(bamReadPath, baiReadPath)

    # Identify the STR's of the file, both readPath and readFile can be used.
    identifySTRRegions(reads = readFile,
                       flankingRegions = flankingRegions,
                       numberOfMutation = 1,
                       control = identifySTRRegions.control(numberOfThreads = 1)
    )
}
}
