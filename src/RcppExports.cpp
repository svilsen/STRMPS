// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// getAlignmentNeighbourScore
Rcpp::NumericVector getAlignmentNeighbourScore(SEXP parent, Rcpp::StringVector neighbours, int mismatch, int gapOpening, int gapExtension);
RcppExport SEXP STRMPS_getAlignmentNeighbourScore(SEXP parentSEXP, SEXP neighboursSEXP, SEXP mismatchSEXP, SEXP gapOpeningSEXP, SEXP gapExtensionSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type neighbours(neighboursSEXP);
    Rcpp::traits::input_parameter< int >::type mismatch(mismatchSEXP);
    Rcpp::traits::input_parameter< int >::type gapOpening(gapOpeningSEXP);
    Rcpp::traits::input_parameter< int >::type gapExtension(gapExtensionSEXP);
    __result = Rcpp::wrap(getAlignmentNeighbourScore(parent, neighbours, mismatch, gapOpening, gapExtension));
    return __result;
END_RCPP
}
// vmatchMultiPattern
SEXP vmatchMultiPattern(SEXP pattern, SEXP subject, SEXP max_mismatch, SEXP min_mismatch, SEXP with_indels, SEXP fixed, SEXP algorithm, SEXP matches_as, SEXP envir);
RcppExport SEXP STRMPS_vmatchMultiPattern(SEXP patternSEXP, SEXP subjectSEXP, SEXP max_mismatchSEXP, SEXP min_mismatchSEXP, SEXP with_indelsSEXP, SEXP fixedSEXP, SEXP algorithmSEXP, SEXP matches_asSEXP, SEXP envirSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type pattern(patternSEXP);
    Rcpp::traits::input_parameter< SEXP >::type subject(subjectSEXP);
    Rcpp::traits::input_parameter< SEXP >::type max_mismatch(max_mismatchSEXP);
    Rcpp::traits::input_parameter< SEXP >::type min_mismatch(min_mismatchSEXP);
    Rcpp::traits::input_parameter< SEXP >::type with_indels(with_indelsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type fixed(fixedSEXP);
    Rcpp::traits::input_parameter< SEXP >::type algorithm(algorithmSEXP);
    Rcpp::traits::input_parameter< SEXP >::type matches_as(matches_asSEXP);
    Rcpp::traits::input_parameter< SEXP >::type envir(envirSEXP);
    __result = Rcpp::wrap(vmatchMultiPattern(pattern, subject, max_mismatch, min_mismatch, with_indels, fixed, algorithm, matches_as, envir));
    return __result;
END_RCPP
}
// vmatchMultiPatternAlternate
Rcpp::List vmatchMultiPatternAlternate(SEXP pattern, SEXP subject, SEXP max_mismatch, SEXP min_mismatch, SEXP with_indels, SEXP fixed, SEXP algorithm, SEXP matches_as, SEXP envir);
RcppExport SEXP STRMPS_vmatchMultiPatternAlternate(SEXP patternSEXP, SEXP subjectSEXP, SEXP max_mismatchSEXP, SEXP min_mismatchSEXP, SEXP with_indelsSEXP, SEXP fixedSEXP, SEXP algorithmSEXP, SEXP matches_asSEXP, SEXP envirSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type pattern(patternSEXP);
    Rcpp::traits::input_parameter< SEXP >::type subject(subjectSEXP);
    Rcpp::traits::input_parameter< SEXP >::type max_mismatch(max_mismatchSEXP);
    Rcpp::traits::input_parameter< SEXP >::type min_mismatch(min_mismatchSEXP);
    Rcpp::traits::input_parameter< SEXP >::type with_indels(with_indelsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type fixed(fixedSEXP);
    Rcpp::traits::input_parameter< SEXP >::type algorithm(algorithmSEXP);
    Rcpp::traits::input_parameter< SEXP >::type matches_as(matches_asSEXP);
    Rcpp::traits::input_parameter< SEXP >::type envir(envirSEXP);
    __result = Rcpp::wrap(vmatchMultiPatternAlternate(pattern, subject, max_mismatch, min_mismatch, with_indels, fixed, algorithm, matches_as, envir));
    return __result;
END_RCPP
}
// vmatchMultiPatternSeqAn
Rcpp::List vmatchMultiPatternSeqAn(SEXP pattern, SEXP subject, int max_mismatch);
RcppExport SEXP STRMPS_vmatchMultiPatternSeqAn(SEXP patternSEXP, SEXP subjectSEXP, SEXP max_mismatchSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type pattern(patternSEXP);
    Rcpp::traits::input_parameter< SEXP >::type subject(subjectSEXP);
    Rcpp::traits::input_parameter< int >::type max_mismatch(max_mismatchSEXP);
    __result = Rcpp::wrap(vmatchMultiPatternSeqAn(pattern, subject, max_mismatch));
    return __result;
END_RCPP
}
